package raid6;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class Storage {
	private int n;
	private int x;
	private int blockIndex = 0;
	private String path = "/home/batu/disks/";
	private Map<String, Integer> map = new HashMap<String, Integer>();

	public static void main(String[] args) {
		Storage sd = new Storage(4, 20);
		sd.initSystem(sd.path);

		sd.storeFile("/home/batu/train-new 1gram.arff");
	}

	private void storeFile(String path) {
		try {
			FileInputStream f = new FileInputStream(path);
			FileOutputStream out = null;
			long size = f.getChannel().size();
			this.map.put(path, this.blockIndex);

			long i = size;
			byte b;
			while (i >= 0) {
				out = new FileOutputStream(this.path + "disk" + blockIndex % n + "/block" + (blockIndex + 1) + ".txt");
				if (x * 1000000 > i) {
					for (long j = i; j >= 0; j--) {
						b = (byte) f.read();
						out.write(b);
					}
					i=0;
				} else {
					for (long j = x * 1000000; j >= 0; j--) {
						b = (byte) f.read();
						out.write(b);
						
					}
					i=i-x * 1000000;
				}

				out.close();
				this.blockIndex++;
			}

			f.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	Storage(int n, int x) {
		this.n = n;
		this.x = x;
	}

	private void initSystem(String path) {
		for (int i = 0; i < this.n + 2; i++) {
			if ((new File(path + "disk" + i)).mkdirs()) {

			} else {
				System.out.println("create folder error.");
			}
		}
	}

}
