package preprocess;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Combine {

	public static void main(String[] args) {
		try {
			BufferedReader br = new BufferedReader(new FileReader("/home/batu/k21.txt"));
			String line = br.readLine();
			Map<String, Double> k2 = new HashMap<String, Double>();
			while (line != null) {
				k2.put(line.split(",")[0], Double.parseDouble(line.split(",")[1]));
				line = br.readLine();
			}
			br.close();
			
			br = new BufferedReader(new FileReader("/home/batu/k22.txt"));
			line = br.readLine();
			while (line != null) {
				k2.put(line.split(",")[0], Double.parseDouble(line.split(",")[1]));
				line = br.readLine();
			}
			br.close();
			
			br = new BufferedReader(new FileReader("/home/batu/k23.txt"));
			line = br.readLine();
			while (line != null) {
				k2.put(line.split(",")[0], Double.parseDouble(line.split(",")[1]));
				line = br.readLine();
			}
			br.close();
			
			br = new BufferedReader(new FileReader("/home/batu/k24.txt"));
			line = br.readLine();
			while (line != null) {
				k2.put(line.split(",")[0], Double.parseDouble(line.split(",")[1]));
				line = br.readLine();
			}
			br.close();
			
			MyComparator comparator = new MyComparator();
			List<Map.Entry<String, Double>> sortedList = new ArrayList<Map.Entry<String, Double>>();
			sortedList.addAll(k2.entrySet());
			Collections.sort(sortedList, comparator);
			
			BufferedWriter wr = new BufferedWriter(new FileWriter("/home/batu/k2.txt"));
			for (int i = 0; i < sortedList.size(); i++) {
				if (Double.isNaN(sortedList.get(i).getValue())) {

				} else {
					wr.write(sortedList.get(i).getKey() + "," + sortedList.get(i).getValue() + "\n");
				}
			}
			wr.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
