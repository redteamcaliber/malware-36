package preprocess;

import weka.classifiers.bayes.NaiveBayesUpdateable;
import weka.classifiers.meta.FilteredClassifier;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.converters.ArffLoader;
import weka.filters.unsupervised.attribute.Remove;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DecimalFormat;

public class NB {

	public static void main(String[] args) {
		try {
			ArffLoader loader = new ArffLoader();
			loader.setFile(new File("/home/batu/train-newnewnew4.arff"));
			Instances structure = loader.getStructure();
			structure.setClassIndex(structure.numAttributes() - 1);

			// filter
			Remove rm = new Remove();
			rm.setAttributeIndices("1"); // remove 1st attribute

			// classifier
			NaiveBayesUpdateable nb = new NaiveBayesUpdateable();

			FilteredClassifier fc = new FilteredClassifier();
			fc.setFilter(rm);
			fc.setClassifier(nb);

			// train and make predictions
			fc.buildClassifier(structure);
			Instance current;

			int index = 0;
			while ((current = loader.getNextInstance(structure)) != null) {
				System.out.println(index++);
				nb.updateClassifier(current);
			}

			ArffLoader loader1 = new ArffLoader();
			loader1.setFile(new File("/home/batu/test-newnewnew4.arff"));
			Instances structure1 = loader1.getStructure();
			structure1.setClassIndex(structure1.numAttributes() - 1);
			// label instances

			BufferedWriter w = new BufferedWriter(new FileWriter("/home/batu/submit.csv"));
			w.write("\"Id\",\"Prediction1\",\"Prediction2\",\"Prediction3\",\"Prediction4\",\"Prediction5\",\"Prediction6\",\"Prediction7\",\"Prediction8\",\"Prediction9\"\n");
			index = 0;
			while ((current = loader1.getNextInstance(structure1)) != null) {
				System.out.println(index++);
				w.write(current.stringValue(0));
				double[] pred = fc.distributionForInstance(current);
				for (int j = 0; j < pred.length; j++) {
					w.write("," + new DecimalFormat("#0.0000000000000000").format(pred[j]));
				}
				w.write("\n");
			}
			w.close();

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
