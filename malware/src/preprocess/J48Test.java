package preprocess;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.text.DecimalFormat;

import weka.classifiers.meta.FilteredClassifier;
import weka.classifiers.trees.RandomForest;
import weka.core.Instances;
import weka.filters.unsupervised.attribute.Remove;

public class J48Test {

	public static void main(String[] args) {
		try {
			BufferedReader reader = new BufferedReader(new FileReader("/home/batu/train12.arff"));
			Instances train = new Instances(reader);
			reader.close();
			train.setClassIndex(train.numAttributes() - 1);

			reader = new BufferedReader(new FileReader("/home/batu/test12.arff"));
			Instances test = new Instances(reader);
			reader.close();
			// setting class attribute

			// filter
			Remove rm = new Remove();
			rm.setAttributeIndices("1"); // remove 1st attribute

			// classifier
			RandomForest rf = new RandomForest();
			rf.setNumTrees(2000);
			FilteredClassifier fc = new FilteredClassifier();
			fc.setFilter(rm);
			fc.setClassifier(rf);

			fc.buildClassifier(train);

			BufferedWriter w = new BufferedWriter(new FileWriter("/home/batu/submit.csv"));
			w.write("\"Id\",\"Prediction1\",\"Prediction2\",\"Prediction3\",\"Prediction4\",\"Prediction5\",\"Prediction6\",\"Prediction7\",\"Prediction8\",\"Prediction9\"\n");

			for (int i = 0; i < test.numInstances(); i++) {
				w.write(test.instance(i).stringValue(0));
				double[] pred = fc.distributionForInstance(test.instance(i));
				for (int j = 0; j < pred.length; j++) {
					w.write("," + new DecimalFormat("#0.0000000000000000").format(pred[j]));
				}
				w.write("\n");
			}
			w.close();

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
