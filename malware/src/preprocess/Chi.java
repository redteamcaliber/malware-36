package preprocess;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Chi {

	public static void main(String[] args) {

		try {
			List<String> f = new ArrayList<String>();
			int numofF = 0;
			long Sum;
			long numofeachClass[] = new long[9];
			BufferedReader br = new BufferedReader(new FileReader("/home/batu/train3.arff"));
			String line = br.readLine();// @relation malware
			line = br.readLine();//
			line = br.readLine();// @attribute filename string
			line = br.readLine();
			while (line != null) {
				if (line.startsWith("@attribute Class")) {
					break;
				} else {
					f.add(line.split(" ")[1]);
					// System.out.println(line.split(" ")[1]);
					numofF++;
				}
				line = br.readLine();
			}
			line = br.readLine();//
			line = br.readLine();// @data
			line = br.readLine();//
			line = br.readLine();

			String[] parts;

			int A[][] = new int[numofF][9];
			while (line != null) {
				if (line.endsWith("?")) {
					break;
				}
				parts = line.split(",");
				// System.out.println(parts.length);
				for (int i = 1; i < parts.length - 1; i++) {
					if (Integer.parseInt(parts[i]) > 0) {
						A[i - 1][Integer.parseInt(parts[parts.length - 1]) - 1] += Integer.parseInt(parts[i]);
						numofeachClass[Integer.parseInt(parts[parts.length - 1]) - 1] += Integer.parseInt(parts[i]);
						// System.out.println(A[i-1][Integer.parseInt(parts[parts.length-1])-1]);
					}
				}
				line = br.readLine();
			}
			br.close();
			Sum = numofeachClass[0] + numofeachClass[1] + numofeachClass[2] + numofeachClass[3] + numofeachClass[4]
					+ numofeachClass[5] + numofeachClass[7] + numofeachClass[8];

			double chi = 0.0;
			double T1 = 0.0, T2 = 0.0;
			double C = 0.0;
			Map<String, Double> chiMap = new HashMap<String, Double>();

			for (int i = 0; i < numofF; i++) {
				chi = 0.0;
				C = 0.0;
				for (int j = 0; j < 9; j++) {
					C = C + A[i][j];
				}
				if (C != 0.0) {
					// System.out.println("C="+C);
					for (int j = 0; j < 9; j++) {
						T1 = numofeachClass[j] * C / Sum;

						// System.out.println("T="+T1);
						chi += (A[i][j] - T1) * (A[i][j] - T1) / T1;
						T2 = numofeachClass[j] * (Sum - C) / Sum;
						chi += (numofeachClass[j] - A[i][j] - T2) * (numofeachClass[j] - A[i][j] - T2) / T2;
						// System.out.println("T2="+T2+", chi="+chi);
					}
				}
				chiMap.put(f.get(i), chi);
			}

			MyComparator comparator = new MyComparator();
			List<Map.Entry<String, Double>> sortedList = new ArrayList<Map.Entry<String, Double>>();
			sortedList.addAll(chiMap.entrySet());
			Collections.sort(sortedList, comparator);
			BufferedWriter wr = new BufferedWriter(new FileWriter("/home/batu/k3.txt"));
			for (int i = 0; i < sortedList.size(); i++) {
				if (Double.isNaN(sortedList.get(i).getValue())) {

				} else {
					wr.write(sortedList.get(i).getKey() + "," + sortedList.get(i).getValue() + "\n");
				}
			}
			wr.close();

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
